# Определение серверов upstream
upstream backend {
    server backend:8000;
}

upstream frontend {
    server frontend:3000;
}

# Настройки для сервера
server {
    listen 80;
    server_name localhost;

    # Увеличение максимального размера загружаемых файлов
    client_max_body_size 100M;

    # Настройки для заголовков безопасности
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Настройки отключения кэширования для разработки
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    add_header Pragma "no-cache";
    expires 0;

    # Настройки для статических файлов Django
    location /static/ {
        alias /var/html/static/;
        try_files $uri $uri/ =404;
        expires 30d; # Кэширование статических файлов на 30 дней
        access_log off;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Настройки для медиа-файлов Django
    location /media/ {
        alias /var/html/media/;
        try_files $uri $uri/ =404;
        expires 7d; # Кэширование медиа-файлов на 7 дней
        access_log off;
        add_header Cache-Control "public, max-age=604800";
    }

    # Настройки для API запросов
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_buffers 16 32k;
        proxy_buffer_size 64k;

        # Таймауты для долгих запросов
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # Настройки для административной панели Django
    location /admin/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Настройки для документации API
    location /swagger/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /redoc/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Проверка здоровья API
    location /api/health/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Кэширование отключено для проверок здоровья
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires -1;
    }

    # Все остальные запросы обрабатываются фронтендом
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Настройки для WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Обработка ошибок
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Кастомные страницы ошибок
    location = /404.html {
        root /var/html/error_pages;
        internal;
    }

    location = /50x.html {
        root /var/html/error_pages;
        internal;
    }

    # Логи
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}